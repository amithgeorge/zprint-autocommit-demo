name: Format clojure source using zprint
on:
  pull_request:
    branches:
      - '*'
  pull_request_review:
    types: [submitted]

jobs:
  format-and-commit-on-approval:
    if: ${{ github.event_name == 'pull_request_review' && github.event.review.state == 'approved' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@de2d5623fda4ca49da1bac85fdfb3081a037c5fb # v10.2
        with:
          cli: 'latest'
          lein: 2.9.1
          bb: 'latest'
          clj-kondo: 'latest'
          zprint: 1.2.5
      - name: Get Clojure version
        run: clojure --version
      - name: Get zprint version
        run: zprint --version
      - name: Format the code
        run: |
          repo_full_name="${{ github.event.repository.full_name }}"
          pr_number="${{ github.event.pull_request.number }}"
          echo "REPO: $repo_full_name , PR Number: $pr_number"

          pr_url="https://api.github.com/repos/${repo_full_name}/pulls/${pr_number}/files"
          echo "PR_URL: $pr_url"

          files_in_pr=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" $pr_url | bb -i -o '(->> *input* (str/join "") (#(json/decode %1 true)) (map :filename) (filter fs/exists?))')
          dir="`pwd`"
          echo $files_in_pr | grep -i -E '.*\.edn$|.*\.clj[sc]?$' | xargs --verbose zprint --url-only "file://${dir}/.zprint.edn" --formatted-summary-write
      - name: Commit changes
        uses: EndBug/add-and-commit@06d5ce73159a844acd53934e8ab33aee68ee3fd0 # v9.1.1
        with:
          default_author: github_actions

  format-and-commit-on-commit-push:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@de2d5623fda4ca49da1bac85fdfb3081a037c5fb # v10.2
        with:
          cli: 'latest'
          lein: 2.9.1
          bb: 'latest'
          clj-kondo: 'latest'
          zprint: 1.2.5
      - name: Get Clojure version
        run: clojure --version
      - name: Get zprint version
        run: zprint --version
      - id: check_pr_approved
        name: Check whether PR is approved
        run: |
          repo_full_name="${{ github.event.repository.full_name }}"
          pr_number="${{ github.event.pull_request.number }}"
          echo "REPO: $repo_full_name , PR Number: $pr_number"

          pr_url="https://api.github.com/repos/${repo_full_name}/pulls/${pr_number}/reviews"
          echo "PR_URL: $pr_url"

          latest_review_state=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" $pr_url | bb -i -o '(->> *input* (str/join "") (#(json/decode %1 true)) (map :state) last)')
          echo "LATEST REVIEW STATE: $latest_review_state"
          echo "latest_review_state=$latest_review_state" >> $GITHUB_OUTPUT
      - name: Print the step output
        run: |
          echo "STEP OUTPUT: ${{ steps.check_pr_approved.outputs.latest_review_state }}"
      - name: Format the code if PR is approved
        if: ${{ steps.check_pr_approved.outputs.latest_review_state == 'APPROVED' }}
        run: |
          repo_full_name="${{ github.event.repository.full_name }}"
          pr_number="${{ github.event.pull_request.number }}"
          echo "REPO: $repo_full_name , PR Number: $pr_number"

          pr_url="https://api.github.com/repos/${repo_full_name}/pulls/${pr_number}/files"
          echo "PR_URL: $pr_url"

          files_in_pr=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" $pr_url | bb -i -o '(->> *input* (str/join "") (#(json/decode %1 true)) (map :filename) (filter fs/exists?))')
          echo "FILES IN PR: $files_in_pr"
          dir="`pwd`"
          echo $files_in_pr | bb -i -o '(mapcat #(str/split %1 #" +") *input*)' | grep -i -E '.*\.edn$|.*\.clj[sc]?$' | xargs --verbose zprint --url-only "file://${dir}/.zprint.edn" --formatted-summary-write
      - name: Commit changes
        uses: EndBug/add-and-commit@06d5ce73159a844acd53934e8ab33aee68ee3fd0 # v9.1.1
        with:
          default_author: github_actions
